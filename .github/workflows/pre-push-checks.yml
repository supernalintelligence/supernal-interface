name: Pre-push Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  pre-push-checks:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'core/package-lock.json'

      - name: Check package-lock.json sync (Core)
        run: |
          cd core
          echo "üîç Checking if package-lock.json is in sync with package.json..."
          echo "Node.js version: $(node --version)"
          echo "npm version: $(npm --version)"
          
          # Clear npm cache to avoid stale cache issues
          npm cache clean --force
          
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "‚ùå Core package-lock.json is out of sync with package.json"
            echo "üí° The following packages are missing from lock file:"
            npm ci --dry-run 2>&1 | grep "Missing:" || true
            echo ""
            echo "üîß To fix this locally, run: npm install"
            echo "üìù Then commit the updated package-lock.json"
            exit 1
          fi
          echo "‚úÖ Core package-lock.json is in sync"

      - name: Install dependencies
        run: |
          cd core
          npm ci

      - name: Run ESLint
        run: |
          cd core
          npm run lint

      - name: Run TypeScript check
        run: |
          cd core
          npx tsc --noEmit

      - name: Run tests
        run: |
          cd core
          npm run test

      - name: Build package
        run: |
          cd core
          npm run build

      - name: Check package-lock.json sync (Demo)
        run: |
          cd core/demo
          echo "üîç Checking if demo package-lock.json is in sync with package.json..."
          if ! npm ci --dry-run > /dev/null 2>&1; then
            echo "‚ùå Demo package-lock.json is out of sync with package.json"
            echo "üí° The following packages are missing from lock file:"
            npm ci --dry-run 2>&1 | grep "Missing:" || true
            echo ""
            echo "üîß To fix this locally, run: cd core/demo && npm install"
            echo "üìù Then commit the updated package-lock.json"
            exit 1
          fi
          echo "‚úÖ Demo package-lock.json is in sync"

      - name: Install demo dependencies
        run: |
          cd core/demo
          npm ci

      - name: Build demo
        run: |
          cd core/demo
          npm run build
        env:
          NEXT_PUBLIC_GTM_CONTAINER_ID: GTM-TEST

      - name: Run demo tests (if any)
        run: |
          cd core/demo
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            npm run test || echo "No tests found or tests failed"
          fi

      - name: Check package.json version
        run: |
          cd core
          node -e "
            const pkg = require('./package.json');
            console.log('Package version:', pkg.version);
            if (!pkg.version || pkg.version === '0.0.0') {
              console.error('Invalid package version');
              process.exit(1);
            }
          "

      - name: Verify build artifacts
        run: |
          cd core
          if [ ! -d "dist" ]; then
            echo "Build artifacts missing"
            exit 1
          fi
          if [ ! -f "dist/index.js" ]; then
            echo "Main build file missing"
            exit 1
          fi
          echo "Build artifacts verified"

      - name: Check for TODO/FIXME comments
        run: |
          cd core
          if grep -r "TODO\|FIXME" src/ --exclude-dir=node_modules; then
            echo "Warning: TODO/FIXME comments found"
          fi
